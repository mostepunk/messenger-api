services:
  messenger-api:
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: messenger-api
    image: messenger-api:${VERSION:-latest}
    volumes:
      - .:/app
    ports:
      - "${API_SERVICE_PORT}:${API_SERVICE_PORT}"
    env_file:
      - .env
    networks:
      - internal_network
    depends_on:
      messenger-db:
        condition: service_healthy

  messenger-db:
    container_name: messenger_pg-16
    image: postgres:16.1-bullseye
    environment:
      - POSTGRES_DB=${PG_SERVER_DB}
      - POSTGRES_HOST=${PG_SERVER_ADDRESS}
      - POSTGRES_PORT=${PG_SERVER_PORT}
      - POSTGRES_USER=${PG_SERVER_LOGIN}
      - POSTGRES_PASSWORD=${PG_SERVER_PASSWD}
    ports:
      - "${PG_SERVER_EXTERNAL_PORT}:5432"
    volumes:
      - ./db:/var/lib/postgresql/data
      - ./dumps:/dumps
    networks:
      - internal_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_SERVER_LOGIN} -d ${PG_SERVER_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  internal_network:
    driver: bridge
